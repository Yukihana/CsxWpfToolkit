<rm:CachingResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:controls="clr-namespace:CSX.Toolkits.WpfExtensions.Controls"
                              xmlns:rm="clr-namespace:CSX.Toolkits.WpfExtensions.ResourceManagement"
                              xmlns:theme="clr-namespace:CSX.Toolkits.WpfExtensions.ThemeEngine">

    <!--Main Focus Visual Style-->

    <!--Main Template-->
    <ControlTemplate TargetType="{x:Type controls:Button}" x:Key="CsxButtonTemplate">
        <Border x:Name="Border"
                SnapsToDevicePixels="True"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}">
            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
    </ControlTemplate>

    <!--Main Style-->
    <Style TargetType="{x:Type controls:Button}">
        <Setter Property="Template" Value="{StaticResource CsxButtonTemplate}" />

        <!--Metrics-->
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="10 3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="3" />

        <!--Positioning-->
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <!--Default-Colors (exception: inherit foreground)-->
        <Setter Property="Background" Value="{DynamicResource {x:Static theme:ThemeComponents.ControlBackgroundNormalBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static theme:ThemeComponents.ControlBorderNormalBrushKey}}" />

        <!--Events-->

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static theme:ThemeComponents.ControlBackgroundFocusedBrushKey}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static theme:ThemeComponents.ControlBackgroundPressedBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static theme:ThemeComponents.ControlBackgroundDisabledBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static theme:ThemeComponents.ControlForegroundDisabledBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Legacy storyboard. Freezability issue. figure out how to implement via codebehind instead-->
    <Storyboard x:Key="ButtonMouseOverStoryboard">
        <ColorAnimation RepeatBehavior="Forever"
                     Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                     AutoReverse="True"
                     Duration="0:0:1">
            <ColorAnimation.To>
                <MultiBinding Converter="{StaticResource HighlightOverlayMixer}">
                    <MultiBinding.Bindings>
                        <Binding Source="{DynamicResource ThemeControlBackgroundVagueBrush}" />
                        <Binding Source="{x:Static SystemParameters.WindowGlassColor}" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </ColorAnimation.To>
        </ColorAnimation>
    </Storyboard>
</rm:CachingResourceDictionary>